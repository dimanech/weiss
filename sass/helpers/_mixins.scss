// ============================================================================
//  WAI and W3C support
//=============================================================================

// Hide from both screenreaders and browsers
@mixin i-hide {
	display: none !important;
	visibility: hidden;
}

// Hide only visually, but have it available for screenreaders
@mixin i-hide_vis {
	border: 0;
	clip: rect(1px, 1px, 1px, 1px);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute !important;;
	width: 1px;

	.ie6-7 & {
		clip: rect(1px 1px 1px 1px);
	}
}

// Extends the .visuallyhidden class to allow the element to be focusable when navigated to via the keyboard
@mixin i-hide_vis_focus {
	&:focus,
	&:active {
		clip: auto;
		height: auto;
		margin: 0;
		overflow: visible;
		position: static;
		width: auto;
	}
}

// Hide visually and from screenreaders, but maintain layout
@mixin i-hide_invisible {
	visibility: hidden;
}

@mixin i-hide_offscreen {
	text-indent: -9999px;
	overflow: hidden;
	text-decoration: none;
	display: block;
	font-size: 0;
	text-align: start;
}

//============================================================================
//   Retina display alternatives
//============================================================================

//http://37signals.com/svn/posts/3271-easy-retina-ready-images-using-scss

@mixin image-2x($image, $width, $height) {
	@media (min--moz-device-pixel-ratio: 1.3),
	(-o-min-device-pixel-ratio: 2.6/2),
	(-webkit-min-device-pixel-ratio: 1.3), // Google Nexus 7
	(min-device-pixel-ratio: 1.3),
	(min-resolution: 1.3dppx) {
	// on retina, use image that's scaled by 2
		background-image: url($image);
		background-size: $width $height;
	}
}

//div.logo {
//	background: url("logo.png") no-repeat;
//	@include image-2x("logo2x.png", 100px, 25px);
//}

//============================================================================
//   Create CSS Triangles
//============================================================================

// Create CSS Triangles in a Breeze

@mixin cssTriangle($triangleSize, $triangleColor, $triangleDirection) {
	content: "";
	display: block;
	width: 0;
	height: 0;
	border: solid $triangleSize;
	@if ($triangleDirection == top) {
		border-color: $triangleColor transparent transparent transparent;
	}
	@if ($triangleDirection == bottom) {
		border-color: transparent transparent $triangleColor transparent;
	}
	@if ($triangleDirection == left) {
		border-color: transparent transparent transparent $triangleColor;
	}
	@if ($triangleDirection == right) {
		border-color: transparent $triangleColor transparent transparent;
	}
// .example { @include css-triangle(5px, #fff, bottom); }
}

// ============================================================================
//    Vendor prefix Mixins
//=============================================================================

@mixin vendor($property, $value) {
	-webkit-#{$property}: $value;
	-moz-#{$property}: $value;
	-ms-#{$property}: $value;
	-o-#{$property}: $value;
	#{$property}: $value;
}

@mixin border-radius($radius: 5px) {
	-moz-border-radius: $radius;
	-webkit-border-radius: $radius;
	-o-border-radius: $radius;
	border-radius: $radius;
	-webkit-background-clip: padding-box;
}

@mixin box-shadow($bshval: 0 0 4px rgba(black, 0.5)) {
	-moz-box-shadow: $bshval;
	-webkit-box-shadow: $bshval;
	-o-box-shadow: $bshval;
	-box-shadow: $bshval;
}

@mixin transition($transition: all linear 200ms) {
	-webkit-transition: $transition;
	-moz-transition: $transition;
	-o-transition: $transition;
	transition: $transition;
}

//@mixin rotate($deg: 5deg) { // FIXME test
//	-webkit-transform: rotate($deg);
//	-moz-transform: rotate($deg);
//	-o-transform: rotate($deg);
//	transform: rotate($deg);
//}
//
//@mixin scale($factor: 0.2) {
//	-webkit-transform: scale($factor);
//	-moz-transform: scale($factor);
//	-o-transform: scale($factor);
//	transform: scale($factor);
//}

//.test-class {
//  @include transition(all ease 300ms);
//}
